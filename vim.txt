vim笔记
http://www.study-area.org/tips/vim/Vim-5.html
VIM大致可分三种模式
    1.Normal mode(common mode，c-mode)：
        默认状态，只能下按键指令，不能输入文字。
    2.Insert mode(i-mode)：
        按 i 进入。按 Esc 回c-mode。
    3.Ed mode(common-line mode，e-mode)：
        按 ：进入。按 Esc 回c-mode。

    
打开文件
    linux命令行下，vim test.txt
    vim中e-mode下，:e test.txt
  
c-mode下
    :w 存档（write）
    :q 退出（quit）
    :q! 不保存退出
    :wq 保存后退出

移动光标
    左 h 或 Backspace
    下 j 或 +
    上 k 或 -
    右 l 或 Space
    Ctrl-f 即 PageDown
    Crtl-b 即 PageUp
    数字0 或 home，回到行首
    Enter 下一行行首
    ^ 移至第一个非空白字符（记法——正则表达式）
    $ 或 End 移至行尾（记法——正则表达式）
    ) 移至下一个句子（sentence）首，以. ! ? 为区格。
    ( 移至上一个句子（sentence）首
    } 移至下一个段落（paragraph）首，以空白行为区格。
    { 移至上一个段落（paragraph）首
    gg 移至档首（第一行之第一个非空白字符处）
    G 移至档尾（最后一行的第一个非空白字符处）（G 是 goto 的意思，默认参数为最后一行）
    n| 移至第 n 个字符处（每次都是从头算）
    :n 或 nG 移至第 n 行行首

编辑文件
    i 在光标所在字符前开始输入文字(insert)
    I 在行首（第一个非空白字符处）开始输入文字
    a 在光标所在字符后开始输入文字(append)
    A 在行尾开始输入文字。
    o 在光标所在行下开一新行来输入文字(open)
    O 在游标所在行上开一新行来输入文字
    0i （组合用法）先回到行首，再输入文字
    J 将下一行整行接至本行(Joint)，会清除下一行行首的空白字符，并与本行间隔一个空格
    gJ 将下一行整行接至本行(Joint)，不清除下一行行首的空白字符，无空格
    
删除
    x 或 del 删除光标所在字符
    X 删除光标前的字符（不能用Backspace）
    dd 删除本行(delete line)
    dw 删除一个词(delete word)，中文会删除整句
    dG 删至档尾。
    d1G 或dgg 删至档首
    D 删至行尾，或d$（含光标所在字符）
    d0 删至行首，或d^（不含光标所在字符）
    
取代
    r 取代光标所在字符（仅取代一个字符）
    R 连续取代，直至按 Esc
    s 替换一个字元为输入的字串，直至按 Esc
    cc 或 S 取代整行内容。
    cw 从光标处，向后替换，至一个英文词结束(change word)
    c0 取代至行首，或c^。
    C 取代至行尾，即游标所在处以后的字都会被替换。或c$。
    ~ 光标所在处之大小写互换。

撤销还原
    u 撤销（undo）
    U 回复对本行的所有编辑动作
    Crtl+r 还原（redo）

连续执行
    . 重复上一次的编辑指令（移动游标和e-mode的指令不算）
    5dd 删除游标所在处（含）起算以下五行内容
    5J 将五行合并成一行。
    3x 删除三个字符（不支持中文）
    5i 范例 Ecs，插入”范例范例范例范例范例“
    5G 游标移至第五行，是从档首开始起算。
    5l 移至右（hjkl）第五个字元处，用方向键也可以。


复制
    yy 或 Y 复制光标所在行（yank）
    2yy 或 y2y 复制两行。
    y^ 或 y0 复制至行。不含游标所在处字元。
    y$ 复制至行尾。含游标所在处字元。
    yw 复制一个word。
    y2w 复制两个字。
    yG 复制至档尾。
    y1G 复制至档首。

粘贴
    p（小写）代表贴至游标后（下）
    P（大写）代表贴至游标前（上）
    鼠标中键也可以

缓冲区（registers）
    "ayy 将本行文字复制到 a 缓冲区（小写a是替换缓冲区，大写A是追加）
    "ap 将 a 缓冲区的内容贴上。
    :reg 列出所有 registers 的代号及内容
    默认写到"缓冲区，而后之前的依序放至0、1、2……9
    "% 目前编辑的文件
    "# 上一次编辑的文件

查找
    / 然后输入要查找的字符串，按下 Enter。向下找
    ? 向上找。
    n 继续寻找
    N 继续寻找（反向）
    * 寻找光标处的词（完全符合），向下找。
    # 同上，向上找
    g* 同*，部份符合
    g# 同#，部份符合

替换
    :[range]s/pattern/string/[c,e,g,i]
    [range]的格式为 5,20 ，实际不带方括号
    5,20 表示5到20行
    1,$ 表示头到尾  
    % 也表示头到尾
        pattern 就是要被替换掉的字串，可以用 regexp 来表示。pattern 由 string 所取代。
        c confirm，每次替换前会询问
        e 不显示error
        g globe，不询问，整行替换
        i ignore 不分大小写
    :%s/Edwin/Edward/g 
　　全部的Edwin替换为Edward


书签
    在文章中的某处做个记号，在呼叫这个记号时又会回到原处
    mx   x 是 26 个小写字母之一，这样游标所在处就会被mark
    `x 回到书签原设定位置（`是backward quote，Tab上面）
    'x 回到书签设定行行首（'是forward quote，Enter左面）
    小写字母只作用于单一档案内
    大写字母可作用于编辑中之各档案间
    数字可作用于前次编辑的十个档案。'0 是回到前一次编辑档案中离开前的最后位置，'1 则是回到前二次编辑档案的最后位置。不必用 m 手动标示
    :marks 得知目前所有书签的列表。

标示
    v 按下 v 后移动光标，经过的地方就会标示起來。再按一次结束 v-mode。直接用鼠标拉出的也是这种
    V 行标记（包括行首前空白的部分）
    连续三次左键标示一行，连续两次标记当前词
    Ctrl-v  标记矩形区域，再按一次 Ctrl-v 结束标示   
    结束 v-mode 的方式还可使用 Esc 或 Ctrl-c。
    d  刪除标示区内容
    y  复制标示区内容
    <  标示区内容向左移动一个 Tab
    >  标示区内容向右移动一个 Tab


文本格式化
    >> 整行向右移一个shiftwidth
    << 整行向左移一个shiftwidth
    :set shiftwidth? 可得知目前的设定值
    :set sw=4 可重设为 4 个字符
    :ce(nter) 本行文字置中
    :ri(ght) 本行文字靠右
    :le(ft) 本行文字靠左
    所谓置中、靠左右，是参考textwidth(tw) 的设定。如果tw 没有设定，预设是80
    :set nu     打开行号
    
    
    
    
    
    
    
    
    vim编辑器{
        :set hlsearch          # 高亮搜索结果
        gconf-editor           # 配置编辑器
        /etc/vimrc             # 配置文件路径
        vim +24 file           # 打开文件定位到指定行
        vim file1 file2        # 打开多个文件
        vim -O2 file1 file2    # 垂直分屏
        vim -on file1 file2    # 水平分屏
        Ctrl+ U                # 向前翻页
        Ctrl+ D                # 向后翻页
        Ctrl+ww                # 在窗口间切换
        Ctrl+w +or-or=         # 增减高度
        :sp filename           # 上下分割打开新文件
        :vs filename           # 左右分割打开新文件
        :set nu                # 打开行号
        :set nonu              # 取消行号
        :nohl                  # 取消高亮
        :set paste             # 取消缩进
        :set autoindent        # 设置自动缩进
        :set ff                # 查看文本格式
        :set binary            # 改为unix格式
        :%s/字符1/字符2/g       # 全部替换
        :200                   # 跳转到200  1 文件头
        G                      # 跳到行尾
        dd                     # 删除当前行 并复制 可直接p粘贴
        11111dd                # 删除11111行，可用来清空文件
        r                      # 替换单个字符
        R                      # 替换多个字符
        u                      # 撤销上次操作
        *                      # 全文匹配当前光标所在字符串
        $                      # 行尾
        0                      # 行首
        X                      # 文档加密
        v =                    # 自动格式化代码
        Ctrl+v                 # 可视模式
        Ctrl+v I ESC           # 多行操作
        Ctrl+v s ESC           # 批量取消注释

    }